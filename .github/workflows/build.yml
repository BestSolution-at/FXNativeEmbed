name: Build

env:
  mainRevision: ${{ '0.0.1-SNAPHSOT' }}

on:
  push:
    branches:
    - master
    - main
    tags:
    - 'v*'

jobs:

  prepare-version:
    runs-on: windows-latest
    steps:
    - name: Determine Release Revision
      run: echo "${{github.ref}}" | cut -dv -f2 > version.txt
      if: ${{ startsWith('refs/tags/v', github.ref) }}
    - name: Determine Nightly Revision
      run: echo "${{env.mainRevision}}" > version.txt
      if: ${{ !startsWith('refs/tags/v', github.ref) }}
    - uses: actions/upload-artifact@v2
      with:
        name: version
        path: version.txt
  

  build-natives:
    needs: prepare-version
    
    runs-on: windows-latest
    
    steps:
    - name: Retrieve Version
      uses: actions/download-artifact@v2
      with:
        name: version
    - name: Setup Version
      run: echo "BUILD_VERSION=$(cat version.txt)" >> $GITHUB_ENV
    
    - name: Setup CMake
      uses: jwlawson/actions-setup-cmake@v1.4
      with:
        cmake-version: '3.16.x'
    - name: test cmake
      run: cmake --version
      
    - uses: actions/checkout@v2
    - name: Prepare Build
      run: cmake -G "Visual Studio 16 2019" -S native -B native-build 
      
    - name: Build Natives
      run: cmake --build native-build
      
    
    
  build-java:
    needs: 
    - prepare-version
    - build-natives
    
    runs-on: windows-latest
    
    steps:
    - name: Retrieve Version
      uses: actions/download-artifact@v2
      with:
        name: version
    - name: Setup Version
      run: echo "BUILD_VERSION=$(cat version.txt)" >> $GITHUB_ENV
      
      
    - name: Output Build Revision
      run: echo ${{env.BUILD_VERSION}}
      
    - uses: actions/setup-java@v1
      with:
        java-version: '8'
        java-package: jdk+fx
    - name: Test java
      run: java -version
    
    - uses: actions/checkout@v2
    - name: Maven build
      run: mvn -B -Drevision=${{env.BUILD_VERSION}} package
      